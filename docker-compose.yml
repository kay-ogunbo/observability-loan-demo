version: '3.8'
services:
  db:
    image: postgres:15
    env_file: .env
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./db/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
      - db_data:/var/lib/postgresql/data
    ports:
      - "15432:5432"

  generator:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - db
    volumes:
      - ./output:/output
      - ./db:/db:ro
    ports:
      - "8000:8000"      # metrics endpoint exposed
    command: ["python","/app/generator/generate_and_stream.py"]
    restart: "no"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      - default
    restart: "no"

  grafana:
    image: grafana/grafana:9.5.0
    env_file: .env
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_LOG_MODE=console
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    restart: "no"

volumes:
  db_data:
  prometheus_data:
  grafana_data:
